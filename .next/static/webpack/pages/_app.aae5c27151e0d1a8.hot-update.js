"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/features/medicalSlice.js":
/*!**************************************!*\
  !*** ./src/features/medicalSlice.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchHeartAttack: function() { return /* binding */ fetchHeartAttack; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n\nconst fetchHeartAttack = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"medical/heartAttackPrediction\", async (details)=>{\n    console.log(details);\n    const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"/api/heartRate\", details);\n    return response;\n});\nconst initialState = {\n    heartRate: \"\",\n    isLoading: false\n};\nconst medicalSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"medical\",\n    initialState,\n    extraReducers: {\n        [fetchHeartAttack.pending]: (state)=>{\n            state.isLoading = true;\n        },\n        [fetchHeartAttack.fulfilled]: (state, action)=>{\n            var _action_payload;\n            state.isLoading = false;\n            state.heartRate = (_action_payload = action.payload) === null || _action_payload === void 0 ? void 0 : _action_payload.data.prediction;\n        },\n        [fetchHeartAttack.rejected]: (state)=>{\n            state.isLoading = false;\n        }\n    }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (medicalSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmVhdHVyZXMvbWVkaWNhbFNsaWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRTtBQUN2QztBQUVuQixNQUFNRyxtQkFBbUJGLGtFQUFnQkEsQ0FDOUMsaUNBQ0EsT0FBT0c7SUFDTEMsUUFBUUMsR0FBRyxDQUFDRjtJQUNaLE1BQU1HLFdBQVcsTUFBTUwsa0RBQVUsQ0FBRSxrQkFBaUJFO0lBQ3BELE9BQU9HO0FBQ1QsR0FDQTtBQUVGLE1BQU1FLGVBQWU7SUFDbkJDLFdBQVc7SUFDWEMsV0FBVztBQUNiO0FBRUEsTUFBTUMsZUFBZVosNkRBQVdBLENBQUM7SUFDL0JhLE1BQU07SUFDTko7SUFDQUssZUFBZTtRQUNiLENBQUNYLGlCQUFpQlksT0FBTyxDQUFDLEVBQUUsQ0FBQ0M7WUFDM0JBLE1BQU1MLFNBQVMsR0FBRztRQUNwQjtRQUNBLENBQUNSLGlCQUFpQmMsU0FBUyxDQUFDLEVBQUUsQ0FBQ0QsT0FBT0U7Z0JBRWxCQTtZQURsQkYsTUFBTUwsU0FBUyxHQUFHO1lBQ2xCSyxNQUFNTixTQUFTLElBQUdRLGtCQUFBQSxPQUFPQyxPQUFPLGNBQWRELHNDQUFBQSxnQkFBZ0JFLElBQUksQ0FBQ0MsVUFBVTtRQUNuRDtRQUNBLENBQUNsQixpQkFBaUJtQixRQUFRLENBQUMsRUFBRSxDQUFDTjtZQUM1QkEsTUFBTUwsU0FBUyxHQUFHO1FBQ3BCO0lBQ0Y7QUFDRjtBQUVBLCtEQUFlQyxhQUFhVyxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2ZlYXR1cmVzL21lZGljYWxTbGljZS5qcz8zY2M1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNsaWNlLCBjcmVhdGVBc3luY1RodW5rIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoSGVhcnRBdHRhY2sgPSBjcmVhdGVBc3luY1RodW5rKFxyXG4gIFwibWVkaWNhbC9oZWFydEF0dGFja1ByZWRpY3Rpb25cIixcclxuICBhc3luYyAoZGV0YWlscykgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZGV0YWlscylcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChgL2FwaS9oZWFydFJhdGVgLCBkZXRhaWxzKTtcclxuICAgIHJldHVybiByZXNwb25zZTtcclxuICB9XHJcbik7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XHJcbiAgaGVhcnRSYXRlOiBcIlwiLFxyXG4gIGlzTG9hZGluZzogZmFsc2VcclxufTtcclxuXHJcbmNvbnN0IG1lZGljYWxTbGljZSA9IGNyZWF0ZVNsaWNlKHtcclxuICBuYW1lOiBcIm1lZGljYWxcIixcclxuICBpbml0aWFsU3RhdGUsXHJcbiAgZXh0cmFSZWR1Y2Vyczoge1xyXG4gICAgW2ZldGNoSGVhcnRBdHRhY2sucGVuZGluZ106IChzdGF0ZSkgPT4ge1xyXG4gICAgICBzdGF0ZS5pc0xvYWRpbmcgPSB0cnVlO1xyXG4gICAgfSxcclxuICAgIFtmZXRjaEhlYXJ0QXR0YWNrLmZ1bGZpbGxlZF06IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgIHN0YXRlLmlzTG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICBzdGF0ZS5oZWFydFJhdGUgPSBhY3Rpb24ucGF5bG9hZD8uZGF0YS5wcmVkaWN0aW9uXHJcbiAgICB9LFxyXG4gICAgW2ZldGNoSGVhcnRBdHRhY2sucmVqZWN0ZWRdOiAoc3RhdGUpID0+IHtcclxuICAgICAgc3RhdGUuaXNMb2FkaW5nID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVkaWNhbFNsaWNlLnJlZHVjZXI7XHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImNyZWF0ZUFzeW5jVGh1bmsiLCJheGlvcyIsImZldGNoSGVhcnRBdHRhY2siLCJkZXRhaWxzIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwicG9zdCIsImluaXRpYWxTdGF0ZSIsImhlYXJ0UmF0ZSIsImlzTG9hZGluZyIsIm1lZGljYWxTbGljZSIsIm5hbWUiLCJleHRyYVJlZHVjZXJzIiwicGVuZGluZyIsInN0YXRlIiwiZnVsZmlsbGVkIiwiYWN0aW9uIiwicGF5bG9hZCIsImRhdGEiLCJwcmVkaWN0aW9uIiwicmVqZWN0ZWQiLCJyZWR1Y2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/features/medicalSlice.js\n"));

/***/ })

});